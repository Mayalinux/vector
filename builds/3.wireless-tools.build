PACKAGE_VERSION="29"
PACKAGE_NAME="${PACKAGE}-${PACKAGE_VERSION}"
PACKAGE_DESCRIPTION="Tools for managing wireless extension"
PROJECT_URL="http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html"
CACHE_EXTENSION=".tar.gz"
PACKAGE_URL="http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/$(echo $PACKAGE | tr - _).${PACKAGE_VERSION}${CACHE_EXTENSION}"
BUILD_FAST=yes
LIBRARY=yes

function build() {
  require "$PACKAGE_PATH"

  extract_tar "$PACKAGE_PATH" "$BUILD_DIR"

  local BDIR="$BUILD_DIR/$(echo "${PACKAGE}.$PACKAGE_VERSION" | tr - _)"

  pushd "$BDIR" >/dev/null
  execute make PREFIX=/usr BUILD_STRIPPING=yes INSTALL_MAN=/usr/share/man CFLAGS="$CFLAGS $CFLAGS_INCLUDE_DIRS" LDFLAGS="$LDFLAGS $LDFLAGS_LIB_DIRS"
  execute make PREFIX="$INSTALL_DIR/usr" install
  popd >/dev/null
  # Already stripped by `make'
}

function check_latest() {
  local ver="$(curl -sL --connect-timeout 10 $PROJECT_URL | grep -oE "$(echo $PACKAGE | tr - _)\.[0-9.]+$(echo $CACHE_EXTENSION | sed 's/\./\\./g')" | cut -d . -f 1 --complement | rev | cut -d . -f 1,2 --complement | rev | sort -Vu | tail -n 1)"

  if [[ "$ver" == "$PACKAGE_VERSION" ]]; then
    echo Package up to date
    exit 0
  else
    echo "New version $ver detected"
    exit 2
  fi
}
