PACKAGE_VERSION="18"
PACKAGE_NAME="kmod-$PACKAGE_VERSION"
PACKAGE_DESCRIPTION="Linux kernel module utilities"
PROJECT_URL="https://www.kernel.org"
PACKAGE_URL="https://www.kernel.org/pub/linux/utils/kernel/kmod/${PACKAGE_NAME}.tar.xz"
BUILD_FAST=yes
LIBRARY=yes

function build() {
  require "$PACKAGE_PATH"

  extract_tar "$PACKAGE_PATH" "$BUILD_DIR"

  local BDIR="$BUILD_DIR/build"
  execute mkdir -p "$BDIR"

  pushd "$BDIR" >/dev/null
  ../$PACKAGE_NAME/configure CFLAGS="-I$ENV_DIR/usr/include" --prefix=/usr --sysconfdir=/etc
  assert_last
  execute make -j$(($N_CPUS+1))
  execute make DESTDIR="$INSTALL_DIR" install
  mkdir -p $INSTALL_DIR/sbin
  pushd "$INSTALL_DIR/usr/bin" >/dev/null
  local links=(insmod rmmod modprobe lsmod modinfo depmod)

  for link in ${links[*]}; do
    ln -s kmod $link
  done
  popd >/dev/null

  cp -l "$INSTALL_DIR/usr/bin/kmod" "$INSTALL_DIR/sbin/kmod"

  pushd "$INSTALL_DIR/sbin" >/dev/null
  for link in ${links[*]}; do
    ln -s kmod $link
  done
  popd >/dev/null

  popd >/dev/null
  strip_package
}

function check_latest() {
  local ver=$(curl -s --connect-timeout 10 "ftp://www.kernel.org/pub/linux/utils/kernel/kmod/" | awk '/kmod/ { sub("kmod", "", $9); print $9; } // {}' | grep '.*\.tar\.xz$' | grep -v doc | sed -e "s/\.tar\.xz$//" -e "s/^-//" | sort -V | tail -n 1)

  if [[ "$ver" == "$PACKAGE_VERSION" ]]; then
    echo "Package up to date"
    exit 0
  else
    echo "Newer version $ver detected"
    exit 2
  fi
}
