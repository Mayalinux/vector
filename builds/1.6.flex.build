PACKAGE_VERSION="2.5.39"
PACKAGE_NAME="flex-$PACKAGE_VERSION"
PACKAGE_DESCRIPTION="Flex lexical analyzer"
PROJECT_URL="http://flex.sourceforge.net/"
CACHE_EXTENSION=".tar.bz2"
PACKAGE_URL="http://downloads.sourceforge.net/project/flex/${PACKAGE_NAME}${CACHE_EXTENSION}"
LIBRARY=yes

function build() {
  require "$PACKAGE_PATH"

  extract_tar "$PACKAGE_PATH" "$BUILD_DIR"

  local BDIR="$BUILD_DIR/build"
  execute mkdir -p "$BDIR"

  pushd "$BDIR" >/dev/null
  ../$PACKAGE_NAME/configure CFLAGS="-I$ENV_DIR/usr/include" --disable-rpath --prefix=/usr --sysconfdir=/etc
  assert_last
  execute make -j$(($N_CPUS+1))
  make DESTDIR="$INSTALL_DIR" install
  assert_last
  popd >/dev/null
}

function check_latest() {
  python3 <<EOF
import sys
from html.parser import HTMLParser
from urllib.request import urlopen
import subprocess
from subprocess import Popen

VERSIONS = []

class KernelPageParser(HTMLParser):
  def __init__(self):
    super().__init__()
    self.data = False

  def handle_starttag(self, tag, attrs):
    global VERSIONS

    if tag == 'tr':
      goal = 0
      for name, value in attrs:
        if name == 'title' and value.startswith('flex-') and value.endswith('$CACHE_EXTENSION'):
          goal += 1
          ver = value[len('flex-'):-len('$CACHE_EXTENSION')]
        elif name == 'class' and 'file' in value:
          goal += 1
      if goal == 2:
        VERSIONS.append(ver)

KernelPageParser().feed(urlopen('http://sourceforge.net/projects/flex/files/').read().decode('utf-8'))

with Popen(['sort', '-V'], stdin=subprocess.PIPE, stdout=subprocess.PIPE) as pipe:
  for v in VERSIONS:
    pipe.stdin.write('{}\n'.format(v).encode('utf-8'))

  pipe.stdin.close()

  with Popen(['tail', '-n', '-1'], stdin=subprocess.PIPE, stdout=subprocess.PIPE) as pipe2:
    pipe2.stdin.write(pipe.stdout.read())
    pipe2.stdin.close()
    ver = pipe2.stdout.read().decode('utf-8').strip(' \n\t')

if ver != '$PACKAGE_VERSION':
  print('New version %s detected' % ver)
else:
  print('Package up to date')
EOF
}
