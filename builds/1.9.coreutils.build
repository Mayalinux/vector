PACKAGE_VERSION="8.23"
PACKAGE_NAME="coreutils-$PACKAGE_VERSION"
PACKAGE_DESCRIPTION="Core OS utilities"
PROJECT_URL="http://www.gnu.org/software/coreutils/"
PACKAGE_URL="http://ftp.gnu.org/gnu/coreutils/${PACKAGE_NAME}.tar.xz"
BUILD_FAST=yes
LIBRARY=no

function build() {
  depends_on attr
  depends_on gmp

  require "$PACKAGE_PATH"

  extract_tar "$PACKAGE_PATH" "$BUILD_DIR"

  local BDIR="$BUILD_DIR/build"
  execute mkdir -p "$BDIR"

  pushd "$BDIR" >/dev/null
  ../$PACKAGE_NAME/configure CFLAGS="-I$ENV_DIR/usr/include" --prefix=/usr --bindir=/bin --sbindir=/sbin --libdir=/lib --sysconfdir=/etc --localstatedir=/var --without-openssl --disable-acl --disable-libsmack --disable-libcap --disable-rpath
  assert_last
  execute make -j$(($N_CPUS+1))
  make DESTDIR="$INSTALL_DIR" install
  assert_last
  popd >/dev/null
  strip_package
}

function check_latest() {
  local ver=$(curl -s --connect-timeout 10 "ftp://ftp.gnu.org/gnu/coreutils/" | awk '/coreutils/ { sub("coreutils", "", $9); print $9; } // {}' | grep '.*\.tar\.xz$' | grep -v doc | sed -e "s/\.tar\.xz$//" -e "s/^-//" | sort -V | tail -n 1)

  if [[ "$ver" == "$PACKAGE_VERSION" ]]; then
    echo "Package up to date"
    exit 0
  else
    echo "Newer version $ver detected"
    exit 2
  fi
}
